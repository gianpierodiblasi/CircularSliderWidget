<?xml version="1.0" encoding="UTF-8"?> 
<project name="CircularSliderWidget" basedir="." default="build"> 
 
  <property name="extension.jar" value="circularsliderwidget.jar" /> 
 
  <property name="target"         value="1.8" /> 
  <property name="source"         value="1.8" /> 
  <property name="debuglevel"     value="source,lines,vars" /> 
  <property name="common"         value="common" /> 
  <property name="ui"             value="ui" /> 
  <property name="lib"            value="lib" /> 
  <property name="entities"       value="Entities" /> 
  <property name="localization"   value="Localization" /> 
  <property name="src.dir"        value="${basedir}/src" /> 
  <property name="build.dir"      value="${user.home}/builds/${ant.project.name}/bin" /> 
  <property name="minify.dir"     value="${user.home}/builds/${ant.project.name}/minify" /> 
  <property name="custom.dir"     value="${user.home}/builds/${ant.project.name}/custom" /> 
  <property name="config.dir"     value="${basedir}/configfiles" /> 
  <property name="ui.dir"         value="${basedir}/${ui}" /> 
  <property name="lib.dir"        value="${basedir}/${lib}" /> 
  <property name="zip.dir"        value="${user.home}/builds/${ant.project.name}/build/distributions" /> 
  <property name="entity.dir"     value="${basedir}/Entities" /> 
  <property name="localization.dir"  value="${basedir}/${localization}" /> 
 
  <property file="${user.home}/vendor-custom.txt"/> 
  <property file="extension.properties" /> 
 
  <!-- ExtensionPackage directory structure props --> 
  <property name="package.lib.basedir" value="${lib}" /> 
  <property name="package.ui.basedir" value="${ui}" /> 
  <property name="package.common.lib.dir" value="${package.lib.basedir}/${common}" /> 
  <property name="package.common.ui.dir" value="${package.ui.basedir}/${common}" /> 
 
  <!--  Extension file info --> 
  <property name="zip.file.name" value="${ant.project.name}.zip" /> 
  <property name="minify-zip.file.name" value="${ant.project.name}-min.zip" /> 
  <property name="minify-custom-zip.file.name" value="${ant.project.name}-min-custom.zip" /> 
  
  <tstamp> 
    <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss" /> 
  </tstamp> 
 
  <!-- define the classpath so it picks up the ThingWorx SDK jar relative to this basedir --> 
  <path id="jar.classpath"> 
    <pathelement location="${build.dir}" /> 
    <fileset dir="${basedir}/twx-lib" includes="*.jar" /> 
    <fileset dir="${lib.dir}" includes="*.jar" erroronmissingdir="false" /> 
  </path> 
 
  <target name="clean"> 
    <delete dir="${build.dir}" /> 
    <delete dir="${zip.dir}" /> 
    <delete dir="${minify.dir}" /> 
    <delete dir="${custom.dir}" /> 
  </target> 
 
  <target name="init" depends="clean"> 
    <mkdir dir="${build.dir}" /> 
 
    <copy includeemptydirs="false" todir="${build.dir}"> 
      <fileset dir="${src.dir}"> 
        <exclude name="**/*.launch" /> 
        <exclude name="**/*.java" /> 
      </fileset> 
    </copy> 
  </target> 
 
  <target name="build-source" depends="init"> 
    <echo message="${ant.project.name}: ${ant.file}" /> 
    <javac debug="true" debuglevel="${debuglevel}" destdir="${build.dir}" source="${source}" target="${target}" includeantruntime="false"> 
      <src path="${src.dir}" /> 
      <classpath refid="jar.classpath" /> 
    </javac> 
  </target> 
 
  <target name="check-bin" depends="build-source"> 
    <fileset dir="${build.dir}" id="binfileset" /> 
    <condition property="bindir.empty"> 
      <length length="0"> 
        <fileset refid="binfileset" /> 
      </length> 
    </condition> 
  </target> 
 
  <target name="build-jars" depends="check-bin" unless="bindir.empty"> 
    <echo message="building ${extension.jar} to ${build.dir}..." /> 
    <jar destfile="${build.dir}/${extension.jar}"> 
      <!-- generate MANIFEST inline --> 
      <manifest> 
        <attribute name="Built-By" value="Eclipse Plugin for ThingWorx Extension Development ${twx_eclipse_plugin_version}" /> 
        <attribute name="Build-Date" value="${NOW}" /> 
        <section name="${ant.project.name}"> 
          <attribute name="Package-Title" value="${ant.project.name}" /> 
          <attribute name="Package-Version" value="${package_version}" /> 
          <attribute name="Package-Vendor" value="${project_vendor}" /> 
        </section> 
      </manifest> 
 
      <fileset dir="${build.dir}" /> 
    </jar> 
  </target> 
 
  <target name="copy-minify">
    <copy todir="${minify.dir}">
      <fileset dir="${basedir}" includes="${ui}/**/*.min.*" excludes="${ui}/**/jslibrary/*.*"/>
      <fileset dir="${basedir}" includes="${ui}/**/*.png" />
    </copy>  
    
    <move todir="${minify.dir}">
      <fileset dir="${minify.dir}" includes="${ui}/**/*.min.*" />
      <mapper>
        <mapper type="regexp" from="(.*).min.(.*)" to="\1.\2" />
      </mapper>
    </move>
  </target>
  
  <target name="metadata-custom">
    <copy todir="${custom.dir}">
      <fileset dir="${config.dir}" includes="metadata.xml" />
    </copy>
    
    <replace file="${custom.dir}/metadata.xml" token="Accenture Italy - Industry X" value="${vendor-custom}"/>
  </target>
  
  <target name="package-extension" depends="build-jars"> 
    <zip destfile="${zip.dir}/${zip.file.name}"> 
      <mappedresources> 
        <fileset dir="${build.dir}" includes="${extension.jar}" /> 
        <globmapper from="*" to="${package.common.lib.dir}/*" /> 
      </mappedresources> 
 
      <zipfileset dir="${config.dir}" includes="metadata.xml" /> 
 
      <zipfileset dir="${basedir}" includes="${entities}/**/*.xml" /> 
      <zipfileset dir="${basedir}" includes="${localization}/**/*.json" /> 
      <zipfileset dir="${basedir}" includes="${ui}/**/*.*" excludes="${ui}/**/*.min.*,${ui}/**/jslibrary/*.*" /> 
      <zipfileset dir="${basedir}" includes="${ui}/**/jslibrary/*.*" /> 
      <zipfileset dir="${lib.dir}" includes="**/*.jar" prefix="${package.common.lib.dir}/"/> 
    </zip> 
  </target> 
   
  <target name="package-extension-minify" depends="build-jars,copy-minify"> 
    <zip destfile="${zip.dir}/${minify-zip.file.name}"> 
      <mappedresources> 
        <fileset dir="${build.dir}" includes="${extension.jar}" /> 
        <globmapper from="*" to="${package.common.lib.dir}/*" /> 
      </mappedresources> 
 
      <zipfileset dir="${config.dir}" includes="metadata.xml" /> 
 
      <zipfileset dir="${basedir}" includes="${entities}/**/*.xml" /> 
      <zipfileset dir="${basedir}" includes="${localization}/**/*.json" />
      <zipfileset dir="${minify.dir}" includes="**/*.*" /> 
      <zipfileset dir="${basedir}" includes="${ui}/**/jslibrary/*.*" /> 
      <zipfileset dir="${lib.dir}" includes="**/*.jar" prefix="${package.common.lib.dir}/"/> 
    </zip> 
  </target> 
    
  <target name="package-extension-minify-custom" depends="build-jars,copy-minify,metadata-custom"> 
    <zip destfile="${zip.dir}/${minify-custom-zip.file.name}"> 
      <mappedresources> 
        <fileset dir="${build.dir}" includes="${extension.jar}" /> 
        <globmapper from="*" to="${package.common.lib.dir}/*" /> 
      </mappedresources> 
 
      <zipfileset dir="${custom.dir}" includes="metadata.xml" /> 
 
      <zipfileset dir="${basedir}" includes="${entities}/**/*.xml" /> 
      <zipfileset dir="${basedir}" includes="${localization}/**/*.json" />
      <zipfileset dir="${minify.dir}" includes="**/*.*" /> 
      <zipfileset dir="${basedir}" includes="${ui}/**/jslibrary/*.*" /> 
      <zipfileset dir="${lib.dir}" includes="**/*.jar" prefix="${package.common.lib.dir}/"/> 
    </zip> 
  </target> 
  
  <target name="build" depends="package-extension,package-extension-minify,package-extension-minify-custom"> 
    <echo message="Building ${ant.project.name} extension package..."/> 
  </target> 
 
</project> 