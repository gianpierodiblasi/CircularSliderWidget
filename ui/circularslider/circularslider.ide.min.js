TW.IDE.Dialogs.CircularSliderCustomEditor=function(){var a=(new Date).getTime()+"_"+Math.floor(1E3*Math.random());this.title="Circular Slider Editor";this.renderDialogHtml=function(b){var c=9>=parseFloat(TWX.App.version)?"width:100%;height:100%":"width:98%;height:96%";return"<div class='CircularSliderCustomEditor_"+a+"' style='"+c+";position:absolute'>  <div style='display:flex'>    <div style='margin-right:5px'>      <label for='CircularSliderCustomEditor_"+a+"_sliderBackgroundColor'>sliderBackgroundColor</label>      <input type='color' id='CircularSliderCustomEditor_"+
a+"_sliderBackgroundColor' style='width:130px' class='CircularSliderCustomEditor_"+a+"_sliderBackgroundColor' value='"+b.properties.sliderBackgroundColor+"'/>    </div>  </div>  <div style='display:flex'>    <div style='margin-right:5px'>      <label for='CircularSliderCustomEditor_"+a+"_knobsBackgroundColor'>knobsBackgroundColor</label>      <input type='color' id='CircularSliderCustomEditor_"+a+"_knobsBackgroundColor' style='width:130px' class='CircularSliderCustomEditor_"+a+"_knobsBackgroundColor' value='"+
b.properties.knobsBackgroundColor+"'/>    </div>    <div style='margin-right:5px'>      <label for='CircularSliderCustomEditor_"+a+"_knobsFontColor'>knobsFontColor</label>      <input type='color' id='CircularSliderCustomEditor_"+a+"_knobsFontColor' style='width:130px' class='CircularSliderCustomEditor_"+a+"_knobsFontColor' value='"+b.properties.knobsFontColor+"'/>    </div>    <div style='margin-right:5px'>      <label for='CircularSliderCustomEditor_"+a+"_knobsBorderColor'>knobsBorderColor</label>      <input type='color' id='CircularSliderCustomEditor_"+
a+"_knobsBorderColor' style='width:130px' class='CircularSliderCustomEditor_"+a+"_knobsBorderColor' value='"+b.properties.knobsBorderColor+"'/>    </div>    <div>      <label for='CircularSliderCustomEditor_"+a+"_knobSelectedBorderColor'>knobSelectedBorderColor</label>      <input type='color' id='CircularSliderCustomEditor_"+a+"_knobSelectedBorderColor' style='width:130px' class='CircularSliderCustomEditor_"+a+"_knobSelectedBorderColor' value='"+b.properties.knobSelectedBorderColor+"'/>    </div>  </div></div>"};
this.afterRender=function(a){};this.updateProperties=function(b){b.setProperty("sliderBackgroundColor",$(".CircularSliderCustomEditor_"+a+"_sliderBackgroundColor").val());b.setProperty("knobsBackgroundColor",$(".CircularSliderCustomEditor_"+a+"_knobsBackgroundColor").val());b.setProperty("knobsFontColor",$(".CircularSliderCustomEditor_"+a+"_knobsFontColor").val());b.setProperty("knobsBorderColor",$(".CircularSliderCustomEditor_"+a+"_knobsBorderColor").val());b.setProperty("knobSelectedBorderColor",
$(".CircularSliderCustomEditor_"+a+"_knobSelectedBorderColor").val());return!0}};
TW.IDE.Widgets.circularslider=function(){this.widgetIconUrl=function(){return"../Common/extensions/CircularSliderWidget/ui/circularslider/circularslider.png"};this.widgetProperties=function(){return{name:"CircularSlider",description:"Widget to visualize a circular slider",category:["Common"],iconImage:"circularslider.png",supportsAutoResize:!0,customEditor:"CircularSliderCustomEditor",customEditorMenuText:"Edit Circular Slider",properties:{Width:{description:"width",defaultValue:300},Height:{description:"height",
defaultValue:300},numberOfKnobs:{description:"The number of knobs",baseType:"INTEGER",defaultValue:1},min:{description:"The minimum value",baseType:"INTEGER",defaultValue:0,isBindingTarget:!0},max:{description:"The maximum value",baseType:"INTEGER",defaultValue:100,isBindingTarget:!0},startAngle:{description:"The start angle (in degree), 0 = north, clockwise",baseType:"INTEGER",defaultValue:0},sliderStrokeWidth:{description:"The stroke width of the slider",baseType:"INTEGER",defaultValue:20},sliderBackgroundColor:{description:"The background color of the slider",
baseType:"STRING",defaultValue:"#D8DBDE"},knobsRadius:{description:"The radius of the knobs",baseType:"INTEGER",defaultValue:15},knobsMaxFontSize:{description:"The maximum font size of the knobs",baseType:"INTEGER",defaultValue:10},knobsBackgroundColor:{description:"The background color of the knobs",baseType:"STRING",defaultValue:"#FFFFFF"},knobsFontColor:{description:"The font color of the knobs",baseType:"STRING",defaultValue:"#787878"},knobsBorderWidth:{description:"The border width of the knobs",
baseType:"INTEGER",defaultValue:1},knobsBorderColor:{description:"The border color of the knobs",baseType:"STRING",defaultValue:"#D8DBDE"},knobSelectedBorderColor:{description:"The border color of the selected knob",baseType:"STRING",defaultValue:"#0094C8"},knobsFormatFunction:{description:'The function to define the format of the knobs values, the function has an input "value" and has to return a "result" value',baseType:"STRING",defaultValue:"result = value"},debugMode:{isVisible:!0,baseType:"BOOLEAN",
isEditable:!0,defaultValue:!1,description:"true to activate the debug"}}}};this.widgetServices=function(){return{}};this.widgetEvents=function(){return{ValuesChanged:{}}};this.renderHtml=function(){return'<div class="widget-content widget-circularslider"><span class="circularslider-property">Circular Slider</span></div>'};this.afterRender=function(){this.addNewKnobParameters(this.getProperty("numberOfKnobs"))};this.afterSetProperty=function(a,b){if("numberOfKnobs"===a)return 1>b?(TW.IDE.showStatusText("error",
"numberOfKnobs less than 1."),this.setProperty("numberOfKnobs",1)):(this.deleteOldKnobParameters(),this.addNewKnobParameters(b)),!1};this.deleteOldKnobParameters=function(){var a=this.allWidgetProperties().properties,b;for(b in a)b.toLowerCase().startsWith("value")&&delete a[b]};this.addNewKnobParameters=function(a){for(var b=this.allWidgetProperties().properties,c=1;c<=a;c++)b["Value"+c]={isBaseProperty:!1,name:"Value"+c,type:"property",description:"Value N. "+c,isBindingTarget:!0,isBindingSource:!0,
baseType:"NUMBER",isVisible:!0,isEditable:!0};this.updatedProperties({updateUI:!0})}};